{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 VBA Challenge \
Olivia Okafor \
Project Overview 
\f1\b0 \
\
This project is aimed at helping the client Steve with analyzing a list of Stock options and looking at how they have performed in the years 2017 and 2018. During this analysis, the total volumes fo each stock ticker was calculated and the total yearly return was also calculated, to give Steve the information needed to make an informed decision on what stocks to invest in. \
\
This challenge is aimed at us refactoring the code and making it more efficient and capable to run more stocks. \
\
\

\f0\b Original Script Results 
\f1\b0 \
\
The 2017 code ran in 0.3085938 seconds. The 2017 stocks had good returns with the exception of TERP, that underperformed that year. From the analysis performed, the top stocks of 2017 from the list provided were DQ, SEDG and ENPH. The best performing stock was DQ and the worst performing stock was TERP. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 2.png \width5320 \height4320 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 3.png \width5040 \height4520 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
The 2018 code ran in 0.3203125. The 2018 returns of the stocks were not positive. The only stocks that performed well that year were ENPH and RUN. The worst performing stocks in 2018 was DQ and the best performing was RUN. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 1.png \width5280 \height4340 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 4.png \width4620 \height4580 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f0\b Refacted Script Results
\f1\b0 \
\
The 2017 refracted code ran for 0.04296875 while the 2018 ran for 0.04296875. These run times were much less than the original code which shows that the code was improved and made to perform better. \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 5.png \width5360 \height4500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
{{\NeXTGraphic Pasted Graphic 6.png \width5280 \height4400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\

\f0\b Advantages of Refactoring Code 
\f1\b0 \
- Refracting code helps the coder find bugs that need to be fixed to increase productivity. \
- Refracting also helps the analysis run faster as the functionality is improved. \
- It also makes it clearer and more concise\

\f0\b \
Disadvantages of Refactoring Code 
\f1\b0 \
- It can be hard or complicated to refract code if you do not fully understand the previous code that has been written. \
- A lot of the code functionality will have to be retested which could take a bit of time. \
\

\f0\b Advantages of Refactoring the code above 
\f1\b0 \
- The refracted code made the code less cumbersome and easier to follow \
- The refracted code ran faster as it loops through the data one time and presents the resulting array rather than looping multiple times and printing different values. \
\

\f0\b Disadvantages of Refactoring the code 
\f1\b0 \
- It could be tedious refracting an already existing code as opposed to creating a new code.}